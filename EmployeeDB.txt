UC1-Ability to create a payroll
service database
- Using MSSQL Client use create database
query to create a payroll_service
database
- Also you can see the DB created by
using show database query
- And go to the database created by using
use payroll_service query

ANS-mysql> create database payroll_service;
Query OK, 1 row affected (0.02 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| payroll_service    |
| performance_schema |
| sakila             |
| sys                |
| world              |
+--------------------+
7 rows in set (0.00 sec)

mysql> use payroll_service;
Database changed
mysql> select database();
+-----------------+
| database()      |
+-----------------+
| payroll_service |
+-----------------+
1 row in set (0.00 sec)



UC2-Ability to create a employee payroll table
in the payroll service database to
manage employee payrolls
- Use payroll_service database in MSSQL Client
- Use Create Table employee_payroll Query
to create employee payroll table with columns id,
name, salary and start date as column. Note Id is set to
auto increment.
- Understand the SQL data types to be used for the
table
- Note: SQL Queries as case insensitive

create table employee_payroll
    -> (
    -> id INT unsigned NOT NULL AUTO_INCREMENT,
    -> name VARCHAR(50) NOT NULL,
    -> salary Double NOT NULL,
    -> start DATE NOT NULL,
    -> PRIMARY KEY (id)
    -> );
Query OK, 0 rows affected (0.06 sec)

mysql> describe employee_payroll;
+--------+--------------+------+-----+---------+----------------+
| Field  | Type         | Null | Key | Default | Extra          |
+--------+--------------+------+-----+---------+----------------+
| id     | int unsigned | NO   | PRI | NULL    | auto_increment |
| name   | varchar(50)  | NO   |     | NULL    |                |
| salary | double       | NO   |     | NULL    |                |
| start  | date         | NO   |     | NULL    |                |
+--------+--------------+------+-----+---------+----------------+
4 rows in set (0.01 sec)


UC3-Ability to create employee
payroll data in the payroll
service database as part of
CRUD Operation - Use payroll_service database in
MSSQL Client
- Use INSERT INTO employee_payroll
Query to create employees payroll
data into the employee_payroll table


insert into employee_payroll(name,salary,start) values
    -> ('Bill',1000000.0,'2018-01-03'),
    -> ('Terisa',2000000.0,'2019-11-13'),
    -> ('Charlie',3000000.0,'2020-05-21');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0


UC-4-Ability to retrieve all the
employee payroll data that is
added to payroll service
database
- Use payroll_service database in MSSQL
Client
- Use SELECT * FROM employee_payroll to
retrieve all the data from the
employee_payroll table


mysql> select * from employee_payroll;
+----+---------+---------+------------+
| id | name    | salary  | start      |
+----+---------+---------+------------+
|  1 | Bill    | 1000000 | 2018-01-03 |
|  2 | Terisa  | 2000000 | 2019-11-13 |
|  3 | Charlie | 3000000 | 2020-05-21 |
+----+---------+---------+------------+
3 rows in set (0.00 sec)


UC-5
Ability to retrieve salary data for a particular
employee as well as all employees who have
joined in a particular data range from the
payroll service database
- Use SELECT salary FROM employee_payroll
WHERE name = 'Bill’ Query to View Bill’s salary
- Use Select query with Where condition View employees
between start dates
- Query: WHERE start BETWEEN CAST('2018-01-01'
AS DATE) AND DATE(NOW());
- Note: Where Condition Clause is used to retrieve the row needed
from the table
- Note: Use of Database Functions like CAST() and NOW() in the
Query


mysql> select * from employee_payroll where start BETWEEN CAST('2018-01-01' AS DATE) AND DATE(NOW());
+----+---------+---------+------------+
| id | name    | salary  | start      |
+----+---------+---------+------------+
|  1 | Bill    | 1000000 | 2018-01-03 |
|  2 | Terisa  | 2000000 | 2019-11-13 |
|  3 | Charlie | 3000000 | 2020-05-21 |
+----+---------+---------+------------+
3 rows in set (0.00 sec)



UC-6 Ability to add Gender to Employee
Payroll Table and Update the Rows to
reflect the correct Employee Gender
- Use payroll_service database in MSSQL Client
- Use Alter Table Command to add Field gender after
the name field
- Use Update Query to set the gender using where
condition with the employee name


mysql> Alter table employee_payroll ADD gender CHAR(1) after name;
Query OK, 0 rows affected (0.08 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> discribe employee_payroll;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'discribe employee_payroll' at line 1
mysql> describe employee_payroll;
+--------+--------------+------+-----+---------+----------------+
| Field  | Type         | Null | Key | Default | Extra          |
+--------+--------------+------+-----+---------+----------------+
| id     | int unsigned | NO   | PRI | NULL    | auto_increment |
| name   | varchar(50)  | NO   |     | NULL    |                |
| gender | char(1)      | YES  |     | NULL    |                |
| salary | double       | NO   |     | NULL    |                |
| start  | date         | NO   |     | NULL    |                |
+--------+--------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

mysql> update employee_payroll set gender='F' where name='Terisa';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from employee_payroll;
+----+---------+--------+---------+------------+
| id | name    | gender | salary  | start      |
+----+---------+--------+---------+------------+
|  1 | Bill    | NULL   | 1000000 | 2018-01-03 |
|  2 | Terisa  | F      | 2000000 | 2019-11-13 |
|  3 | Charlie | NULL   | 3000000 | 2020-05-21 |
+----+---------+--------+---------+------------+
3 rows in set (0.00 sec)

mysql> update employee_payroll set gender='M' where name='Bill' or name='Charlie';
Query OK, 2 rows affected (0.01 sec)
Rows matched: 2  Changed: 2  Warnings: 0

mysql> select * from employee_payroll;
+----+---------+--------+---------+------------+
| id | name    | gender | salary  | start      |
+----+---------+--------+---------+------------+
|  1 | Bill    | M      | 1000000 | 2018-01-03 |
|  2 | Terisa  | F      | 2000000 | 2019-11-13 |
|  3 | Charlie | M      | 3000000 | 2020-05-21 |
+----+---------+--------+---------+------------+
3 rows in set (0.00 sec)


UC7 Ability to find sum, average, min, max
and number of male and female
employees
- Use payroll_service database in MSSQL Client
- Use Database Function SUM, AVG, MIN, MAX, COUNT
to do analysis by Male or Female.
- Note: You will need to use GROUP BY GENDER grouping to
get the result


mysql> Select sum(salary) from employee_payroll where gender='M' group by gender;
+-------------+
| sum(salary) |
+-------------+
|     4000000 |
+-------------+
1 row in set (0.00 sec)

mysql> Select sum(salary) from employee_payroll where gender='F' group by gender;
+-------------+
| sum(salary) |
+-------------+
|     3000000 |
+-------------+
1 row in set (0.00 sec)

mysql> Select avg(salary) from employee_payroll where gender='M' group by gender;
+-------------+
| avg(salary) |
+-------------+
|     2000000 |
+-------------+
1 row in set (0.00 sec)

mysql> Select avg(salary) from employee_payroll group by gender;
+-------------+
| avg(salary) |
+-------------+
|     2000000 |
|     3000000 |
+-------------+
2 rows in set (0.00 sec)

mysql> Select gender,avg(salary) from employee_payroll group by gender;
+--------+-------------+
| gender | avg(salary) |
+--------+-------------+
| M      |     2000000 |
| F      |     3000000 |
+--------+-------------+
2 rows in set (0.00 sec)

mysql> Select avg(salary) from employee_payroll;
+--------------------+
| avg(salary)        |
+--------------------+
| 2333333.3333333335 |
+--------------------+
1 row in set (0.00 sec)

mysql> Select avg(salary) from employee_payroll where gender='M';
+-------------+
| avg(salary) |
+-------------+
|     2000000 |
+-------------+
1 row in set (0.00 sec)

mysql> Select gender,count(name) from employee_payroll group by gender;
+--------+-------------+
| gender | count(name) |
+--------+-------------+
| M      |           2 |
| F      |           1 |
+--------+-------------+
2 rows in set (0.00 sec)


UC8-Ability to extend
employee_payroll data to
store employee information
like employee phone, address
and department - Ensure employee department is non
nullable fields.
- Add Default Value for address field.


mysql> select * from employee_payroll;
+----+---------+--------+---------+------------+
| id | name    | gender | salary  | start      |
+----+---------+--------+---------+------------+
|  1 | Bill    | M      | 1000000 | 2018-01-03 |
|  2 | Terisa  | F      | 3000000 | 2019-11-13 |
|  3 | Charlie | M      | 3000000 | 2020-05-21 |
+----+---------+--------+---------+------------+
3 rows in set (0.00 sec)

mysql> alter table employee_payroll add phone_number varchar(250) after name;
Query OK, 0 rows affected (0.08 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table employee_payroll add address varchar(250) after phone_number;
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table employee_payroll add department varchar(150) not null after address;
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table employee_payroll alter address set default 'TBD';
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select * from employee_payroll;
+----+---------+--------------+---------+------------+--------+---------+------------+
| id | name    | phone_number | address | department | gender | salary  | start      |
+----+---------+--------------+---------+------------+--------+---------+------------+
|  1 | Bill    | NULL         | NULL    |            | M      | 1000000 | 2018-01-03 |
|  2 | Terisa  | NULL         | NULL    |            | F      | 3000000 | 2019-11-13 |
|  3 | Charlie | NULL         | NULL    |            | M      | 3000000 | 2020-05-21 |
+----+---------+--------------+---------+------------+--------+---------+------------+
3 rows in set (0.00 sec)


UC 9-Ability to extend
employee_payroll table
to have Basic Pay,
Deductions, Taxable Pay,
Income Tax, Net Pay


mysql> ALTER table employee_payroll rename column salary to basic_pay;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table employee_payroll add deductions Double not null after basic_pay;
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table employee_payroll add taxable_pay Double not null after deductions;
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table employee_payroll add tax Double not null after taxable_pay;
Query OK, 0 rows affected (0.08 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table employee_payroll add net_pay double not null after tax;
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> describe employee_payroll;
+--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| id           | int unsigned | NO   | PRI | NULL    | auto_increment |
| name         | varchar(50)  | NO   |     | NULL    |                |
| phone_number | varchar(250) | YES  |     | NULL    |                |
| address      | varchar(250) | YES  |     | TBD     |                |
| department   | varchar(150) | NO   |     | NULL    |                |
| gender       | char(1)      | YES  |     | NULL    |                |
| basic_pay    | double       | NO   |     | NULL    |                |
| deductions   | double       | NO   |     | NULL    |                |
| taxable_pay  | double       | NO   |     | NULL    |                |
| tax          | double       | NO   |     | NULL    |                |
| net_pay      | double       | NO   |     | NULL    |                |
| start        | date         | NO   |     | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+
12 rows in set (0.01 sec)


UC10-Ability to make Terissa as part of
Sales and Marketing Department
- Note: The Complete employee payroll
roll need to be Inserted
- If a Salary is now going to be updated
multiple rows has to be updated
creating unnecessary redundancy
- Further There is 2 Employee ID so
according to Database there is two
different Terissa


mysql> update employee_payroll set department='Sales' where name='Terisa';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> insert into employee_payroll(name,department,gender,basic_pay,deductions,taxable_pay,tax,net_pay,start) values
    -> ('Terisa','Marketing','F',3000000.00,1000000.00,2000000.00,500000.00,1500000.00,'2018-01-03');
Query OK, 1 row affected (0.01 sec)

mysql> select * from employee_payroll;
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
| id | name    | phone_number | address | department | gender | basic_pay | deductions | taxable_pay | tax    | net_pay | start      |
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
|  1 | Bill    | NULL         | NULL    |            | M      |   1000000 |          0 |           0 |      0 |       0 | 2018-01-03 |
|  2 | Terisa  | NULL         | NULL    | Sales      | F      |   3000000 |          0 |           0 |      0 |       0 | 2019-11-13 |
|  3 | Charlie | NULL         | NULL    |            | M      |   3000000 |          0 |           0 |      0 |       0 | 2020-05-21 |
|  4 | Terisa  | NULL         | TBD     | Marketing  | F      |   3000000 |    1000000 |     2000000 | 500000 | 1500000 | 2018-01-03 |
+----+---------+--------------+---------+------------+--------+-----------+------------+-------------+--------+---------+------------+
4 rows in set (0.00 sec)

mysql>


UC 11-Implement the ER Diagram
into Payroll Service DB
- Create the corresponding tables as
identified in the ER Diagram along
with attributes
- For Many to Many relationship,
create new Table called Employee
Department having Employee Id and
Department ID and redo the UC 7




mysql> create table company
    -> (
    -> cmp_id INT NOT NULL,
    -> cmp_name varchar(60) not null
    -> );
Query OK, 0 rows affected (0.05 sec)

mysql> show tables;
+--------------------------+
| Tables_in_payroll_system |
+--------------------------+
| company                  |
+--------------------------+
1 row in set (0.00 sec)

mysql> insert into company values(1,'Morningstar');
Query OK, 1 row affected (0.01 sec)

mysql> insert into company values(2,'Amazon');
Query OK, 1 row affected (0.01 sec)

mysql> insert into company values(3,'Flipkart');
Query OK, 1 row affected (0.01 sec)

mysql> select * from company;
+--------+-------------+
| cmp_id | cmp_name    |
+--------+-------------+
|      1 | Morningstar |
|      2 | Amazon      |
|      3 | Flipkart    |
+--------+-------------+
3 rows in set (0.00 sec)

mysql> create table payroll
    -> (
    -> payment_id int not null primary key,
    -> basic_pay double not null,
    -> deductions double not null,
    -> taxable_pay double not null,
    -> tax double not null,
    -> net pay double not null);
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'pay double not null)' at line 8
mysql> create table payroll
    -> (
    -> payment_id int not null primary key,
    -> basic_pay double not null,
    -> deductions double not null,
    -> taxable_pay double not null,
    -> tax double not null,
    -> net pay double not null,
    -> PRIMARY KEY(payment_id));
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'pay double not null,
PRIMARY KEY(payment_id))' at line 8
mysql> create table payroll
    -> (
    -> payment_id int not null primary key,
    -> basic_pay double not null,
    -> deductions double not null,
    -> taxable_pay double not null,
    -> tax double not null,
    -> net pay double not null,
    -> PRIMARY KEY(payment_id));
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'pay double not null,
PRIMARY KEY(payment_id))' at line 8
mysql> (
    -> ;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
mysql> create table payroll
    -> (
    -> payment_id int not null primary key,
    -> basic_pay double not null,
    -> deductions double not null,
    -> taxable_pay double not null,
    -> tax_double not null,
    -> net_pay double not null,
    -> PRIMARY KEY(payment_id));
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null,
net_pay double not null,
PRIMARY KEY(payment_id))' at line 7
mysql> create table payroll
    -> (
    -> payment_id int not null,
    -> basic_pay double not null,
    -> deductions double not null,
    -> taxable_pay double not null,
    -> tax_double not null,
    -> net_pay double not null,
    -> PRIMARY KEY(payment_id));
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null,
net_pay double not null,
PRIMARY KEY(payment_id))' at line 7
mysql> create table payroll
    -> (
    -> payment_id int NOT NULL,
    -> basic_pay double not null,
    -> deductions double not null,
    -> taxable_pay double not null,
    -> tax double not null,
    -> net_pay double not null,
    -> PRIMARY KEY(payment_id));
Query OK, 0 rows affected (0.04 sec)

mysql> alter table company add primary key(cmp_id);
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> describe company;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| cmp_id   | int         | NO   | PRI | NULL    |       |
| cmp_name | varchar(60) | NO   |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql> describe payroll;
+-------------+--------+------+-----+---------+-------+
| Field       | Type   | Null | Key | Default | Extra |
+-------------+--------+------+-----+---------+-------+
| payment_id  | int    | NO   | PRI | NULL    |       |
| basic_pay   | double | NO   |     | NULL    |       |
| deductions  | double | NO   |     | NULL    |       |
| taxable_pay | double | NO   |     | NULL    |       |
| tax         | double | NO   |     | NULL    |       |
| net_pay     | double | NO   |     | NULL    |       |
+-------------+--------+------+-----+---------+-------+
6 rows in set (0.00 sec)

mysql> insert into payroll values(11,500000.00,100000.00,50000.00,25000.00,400000);
Query OK, 1 row affected (0.01 sec)

mysql> insert into payroll values(22,600000.00,200000.00,45000.00,35000.00,500000);
Query OK, 1 row affected (0.01 sec)

mysql> insert into payroll values(33,300000.00,100000.00,13000.00,20000.00,200000);
Query OK, 1 row affected (0.01 sec)

mysql> select * from payroll;
+------------+-----------+------------+-------------+-------+---------+
| payment_id | basic_pay | deductions | taxable_pay | tax   | net_pay |
+------------+-----------+------------+-------------+-------+---------+
|         11 |    500000 |     100000 |       50000 | 25000 |  400000 |
|         22 |    600000 |     200000 |       45000 | 35000 |  500000 |
|         33 |    300000 |     100000 |       13000 | 20000 |  200000 |
+------------+-----------+------------+-------------+-------+---------+
3 rows in set (0.00 sec)

mysql> create table employee
    -> (
    -> emp_id int not null,
    -> emp_name varchar(70) not null,
    -> phone_no varchar(50) not null,
    -> address varchar(150),
    -> gender char(1) not null,
    -> Primary key(emp_id),
    -> payment_id int,
    -> cmp_id int,
    -> foreign key(payment_id) references payroll(payment_id),
    -> foreign key(cmp_id) references company(cmp_id));
Query OK, 0 rows affected (0.06 sec)

mysql> show tables;
+--------------------------+
| Tables_in_payroll_system |
+--------------------------+
| company                  |
| employee                 |
| payroll                  |
+--------------------------+
3 rows in set (0.01 sec)

mysql> describe employee;
+------------+--------------+------+-----+---------+-------+
| Field      | Type         | Null | Key | Default | Extra |
+------------+--------------+------+-----+---------+-------+
| emp_id     | int          | NO   | PRI | NULL    |       |
| emp_name   | varchar(70)  | NO   |     | NULL    |       |
| phone_no   | varchar(50)  | NO   |     | NULL    |       |
| address    | varchar(150) | YES  |     | NULL    |       |
| gender     | char(1)      | NO   |     | NULL    |       |
| payment_id | int          | YES  | MUL | NULL    |       |
| cmp_id     | int          | YES  | MUL | NULL    |       |
+------------+--------------+------+-----+---------+-------+
7 rows in set (0.00 sec)

mysql> create table department
    -> (
    -> dept_id int not null,
    -> dept_name varchar(60) not null,
    -> primary key(dept_id));
Query OK, 0 rows affected (0.03 sec)

mysql> show tables;
+--------------------------+
| Tables_in_payroll_system |
+--------------------------+
| company                  |
| department               |
| employee                 |
| payroll                  |
+--------------------------+
4 rows in set (0.00 sec)

mysql> describe department
    -> ;
+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| dept_id   | int         | NO   | PRI | NULL    |       |
| dept_name | varchar(60) | NO   |     | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql> insert into employee values(101,'Ruchi','9892735509','Sanpada','F',22,1);
Query OK, 1 row affected (0.01 sec)

mysql> select * from employee;
+--------+----------+------------+---------+--------+------------+--------+
| emp_id | emp_name | phone_no   | address | gender | payment_id | cmp_id |
+--------+----------+------------+---------+--------+------------+--------+
|    101 | Ruchi    | 9892735509 | Sanpada | F      |         22 |      1 |
+--------+----------+------------+---------+--------+------------+--------+
1 row in set (0.00 sec)

mysql> insert into employee values(102,'Prachi','9967734725','Vashi','M',11,2);
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(103,'Karan','8380037719','Nerul','M',33,3);
Query OK, 1 row affected (0.01 sec)

mysql> select * from employee;
+--------+----------+------------+---------+--------+------------+--------+
| emp_id | emp_name | phone_no   | address | gender | payment_id | cmp_id |
+--------+----------+------------+---------+--------+------------+--------+
|    101 | Ruchi    | 9892735509 | Sanpada | F      |         22 |      1 |
|    102 | Prachi   | 9967734725 | Vashi   | M      |         11 |      2 |
|    103 | Karan    | 8380037719 | Nerul   | M      |         33 |      3 |
+--------+----------+------------+---------+--------+------------+--------+
3 rows in set (0.00 sec)

mysql> update employee set gender='F' where name='Prachi';
ERROR 1054 (42S22): Unknown column 'name' in 'where clause'
mysql> update employee set gender='F' where emp_name='Prachi';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from employee;
+--------+----------+------------+---------+--------+------------+--------+
| emp_id | emp_name | phone_no   | address | gender | payment_id | cmp_id |
+--------+----------+------------+---------+--------+------------+--------+
|    101 | Ruchi    | 9892735509 | Sanpada | F      |         22 |      1 |
|    102 | Prachi   | 9967734725 | Vashi   | F      |         11 |      2 |
|    103 | Karan    | 8380037719 | Nerul   | M      |         33 |      3 |
+--------+----------+------------+---------+--------+------------+--------+
3 rows in set (0.00 sec)

mysql> describe department;
+-----------+-------------+------+-----+---------+-------+
| Field     | Type        | Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| dept_id   | int         | NO   | PRI | NULL    |       |
| dept_name | varchar(60) | NO   |     | NULL    |       |
+-----------+-------------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql> insert into department values(1,'Comp');
Query OK, 1 row affected (0.01 sec)

mysql> insert into department values(2,'IT');
Query OK, 1 row affected (0.01 sec)

mysql> insert into department values(3,'EXTC');
Query OK, 1 row affected (0.01 sec)

mysql> insert into department values(4,'Accounts');
Query OK, 1 row affected (0.01 sec)

mysql> select * from department;
+---------+-----------+
| dept_id | dept_name |
+---------+-----------+
|       1 | Comp      |
|       2 | IT        |
|       3 | EXTC      |
|       4 | Accounts  |
+---------+-----------+
4 rows in set (0.00 sec)

mysql> create table emp_dept
    -> (
    -> emp_id int,
    -> dept_id int,
    -> foreign key(emp_id) references employee(emp_id),
    -> foreign key(dept_id) references department(dept_id));
Query OK, 0 rows affected (0.06 sec)

mysql> describe emp_dept;
+---------+------+------+-----+---------+-------+
| Field   | Type | Null | Key | Default | Extra |
+---------+------+------+-----+---------+-------+
| emp_id  | int  | YES  | MUL | NULL    |       |
| dept_id | int  | YES  | MUL | NULL    |       |
+---------+------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql> insert into emp_dept values(101,1);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp_dept values(101,4);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp_dept values(102,2);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp_dept values(103,3);
Query OK, 1 row affected (0.01 sec)

mysql> select * from emp_dept;
+--------+---------+
| emp_id | dept_id |
+--------+---------+
|    101 |       1 |
|    101 |       4 |
|    102 |       2 |
|    103 |       3 |
+--------+---------+
4 rows in set (0.00 sec)


UC12-Ensure all retrieve

queries done especially

in UC 4, UC 5 and UC 7

are working with new
table structure


 select employee.gender,sum(payroll.basic_pay) from employee inner join payroll on employee.payment_id=payroll.payment_id group by gender;
+--------+------------------------+
| gender | sum(payroll.basic_pay) |
+--------+------------------------+
| F      |                1600000 |
| M      |                 300000 |
+--------+------------------------+
2 rows in set (0.00 sec)


